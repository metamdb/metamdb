# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: production

on:
  push:
    branches: [master]

jobs:
  build-client:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./client

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 15.x
        uses: actions/setup-node@v2
        with:
          node-version: 15.x
      - run: npm ci --production
      - run: npm run build --if-present
        env:
          REACT_APP_LOCAL_IP: ${{ secrets.REACT_APP_LOCAL_IP }}
      # - run: npm test
      - name: Compress action step
        uses: master-atul/tar-action@v1.0.2
        id: compress
        with:
          command: c
          files: ./client
          outPath: client.tar.gz
      - name: Upload client build for deploy
        uses: actions/upload-artifact@v2
        with:
          name: client
          path: client.tar.gz

  build-server:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./server

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Upload server build for deploy
        uses: actions/upload-artifact@v2
        with:
          name: server
          path: ./server
      # - name: Test with pytest
      #   run: |
      #     pytest

  deploy:
    needs: [build-client, build-server]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Unpack client
        run: tar -zxvf /home/runner/work/metamdb/metamdb/client/client.tar.gz
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SERVER_SSH_KEY }}
          known_hosts: "placeholder"
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
      - name: Deploy with rsync
        run: rsync -avz /home/runner/work/metamdb/metamdb ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/home/${{ secrets.REMOTE_USER }}/apps
      - name: Install Python Dependencies
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            source /home/${{ secrets.REMOTE_USER }}/.virtualenv/casm/bin/activate
            pip install -r /home/${{ secrets.REMOTE_USER }}/apps/server/requirements.txt
